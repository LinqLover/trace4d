@article{hundhausen2002meta,
  title={A meta-study of algorithm visualization effectiveness},
  author={Hundhausen, Christopher D. and Douglas, Sarah A. and Stasko, John T.},
  journal={Journal of Visual Languages \& Computing},
  volume={13},
  number={3},
  pages={259--290},
  year={2002},
  publisher={Elsevier}
}
@inproceedings{myers1986visual,
author = {Myers, B. A.},
title = {Visual Programming, Programming by Example, and Program Visualization: A Taxonomy},
year = {1986},
isbn = {0897911806},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/22627.22349},
doi = {10.1145/22627.22349},
booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
pages = {59–66},
numpages = {8},
location = {Boston, Massachusetts, USA},
series = {CHI '86}
}


@article{sorva2013review,
  title={A review of generic program visualization systems for introductory programming education},
  author={Sorva, Juha and Karavirta, Ville and Malmi, Lauri},
  journal={ACM Transactions on Computing Education (TOCE)},
  volume={13},
  number={4},
  pages={1--64},
  year={2013},
  publisher={ACM New York, NY, USA}
}
@article{levy2003jeliot,
  title={The Jeliot 2000 program animation system},
  author={Levy, Ronit Ben-Bassat and Ben-Ari, Mordechai and Uronen, Pekka A},
  journal={Computers \& Education},
  volume={40},
  number={1},
  pages={1--15},
  year={2003},
  publisher={Elsevier}
}
@inproceedings{brown1984system,
  title={A system for algorithm animation},
  author={Brown, Marc H and Sedgewick, Robert},
  booktitle={Proceedings of the 11th annual conference on Computer graphics and interactive techniques},
  pages={177--186},
  year={1984}
}
@article{velazquez2008srec,
  title={SRec: An animation system of recursion for algorithm courses},
  author={Vel{\'a}zquez-Iturbide, J {\'A}ngel and P{\'e}rez-Carrasco, Antonio and Urquiza-Fuentes, Jaime},
  journal={Acm sigcse bulletin},
  volume={40},
  number={3},
  pages={225--229},
  year={2008},
  publisher={ACM New York, NY, USA}
}

@inproceedings{cunningham1986,
	title	= {A Diagram for Object-oriented Programs},
	author	= {Cunningham, Ward and Beck, Kent},
	journal	= {ACM Sigplan Notices},
	volume	= {21},
	number	= {11},
	pages	= {361--367},
	year	= {1986},
	isbn	= {0897912047},
	publisher	= {Association for Computing Machinery},
	address	= {New York, NY, USA},
	url	= {https://doi.org/10.1145/28697.28734},
	doi	= {10.1145/28697.28734},
	booktitle	= {Conference Proceedings on Object-Oriented Programming Systems, Languages and Applications},
	series	= {OOPSLA '86},
	issn	= {0362-1340}
}
@mastersthesis{schweizer2014,
	title	= {PathObjects: Revealing Object Interactions to Assist Developers in Program Comprehension},
	author	= {Leon Schweizer},
	year	= {2014},
	institution	= {Hasso Plattner Institute, University of Potsdam},
	url	= {https://github.com/leoschweizer/PathObjects-Thesis}
}

@inproceedings{lienhard2009taking,
	title	= {Taking an Object-centric View on Dynamic Information With Object Flow Analysis},
	journal	= {Computer Languages, Systems \& Structures},
	volume	= {35},
	number	= {1},
	pages	= {63-79},
	year	= {2009},
	booktitle	= {ESUG 2007 International Conference on Dynamic Languages (ESUG/ICDL 2007)},
	issn	= {1477-8424},
	doi	= {https://doi.org/10.1016/j.cl.2008.05.006},
	author	= {Adrian Lienhard and Stéphane Ducasse and Tudor Gîrba},
	keywords	= {Dynamic analysis, Object flow analysis}
}
@inproceedings{lienhard2009flow,
  title={Flow-centric, back-in-time debugging},
  author={Lienhard, Adrian and Fierz, Julien and Nierstrasz, Oscar},
  booktitle={Objects, Components, Models and Patterns: 47th International Conference, TOOLS EUROPE 2009, Zurich, Switzerland, June 29-July 3, 2009. Proceedings 47},
  pages={272--288},
  year={2009},
  organization={Springer}
}
@inproceedings{thiede2023object,
	title	= {Object-centric Time-travel Debugging: Exploring Traces of Objects},
	booktitle	= {Proceedings of Companion Proceedings of the 7th International Conference on the Art, Science, and Engineering of Programming},
	series	= {<Programming> '23 Companion},
	author	= {Christoph Thiede and Marcel Taeumel and Robert Hirschfeld},
	year	= {2023},
	publisher	= {ACM},
	address	= {New York, NY, USA},
	numpages	= {7},
	note	= {To appear},
	url	= {https://2023.programming-conference.org/details/px-2023-papers/9/Object-centric-Time-Travel-Debugging-Exploring-Traces-of-Objects},
}
@online{prestin2022hidden,
	url = {https://github.com/LucPrestin/Hidden-Modularity},
	urldate = {2023-05-05},
	title = {Hidden Modularity},
	author = {Luc Prestin},
	year = {2022}
}
@inproceedings{hofer2006design,
	author	= {Christoph Hofer and Marcus Denker and Stéphane Ducasse},
	title	= {Design and Implementation of a Backward-in-time Debugger},
	booktitle	= {NODe 2006 -- GSEM 2006},
	year	= {2006},
	editor	= {Robert Hirschfeld and Andreas Polze and Ryszard Kowalczyk},
	pages	= {17-32},
	publisher	= {Gesellschaft für Informatik e.V.},
	address	= {Bonn},
	doi	= {20.500.12116/24100}
}
@inproceedings{lewis2003debugging,
	title	= {Debugging Backwards in Time},
	author	= {Lewis, Bil},
	journal	= {CoRR},
	year	= {2003},
	volume	= {cs.SE/0310016},
	doi	= {10.48550/ARXIV.CS/0310016},
	numpages	= {11},
	booktitle	= {Proceedings of the Fifth International Workshop on Automated Debugging (AADEBUG 2003)}
}
@inproceedings{lienhard2008practical,
	author	= {Lienhard, Adrian and Gîrba, Tudor and Nierstrasz, Oscar},
	year	= {2008},
	month	= {07},
	pages	= {592-615},
	title	= {Practical Object-oriented Back-in-time Debugging},
	isbn	= {978-3-540-70591-8},
	doi	= {10.1007/978-3-540-70592-5_25},
	booktitle	= {22nd European Conference on Object-oriented Programming (ECOOP 2008)},
	series	= {Lecture Notes in Computer Science},
	volume	= {5142},
	publisher	= {Springer Verlag},
	address	= {Paphos, Cyprus},
}
@article{pothier2009back,
	title	= {Back to the Future: Omniscient Debugging},
	author	= {Pothier, Guillaume and Tanter, {\'E}ric},
	journal	= {IEEE Software},
	volume	= {26},
	number	= {6},
	pages	= {78--85},
	year	= {2009},
	publisher	= {IEEE Computer Society Press},
	doi	= {10.1109/MS.2009.169}
}
@inproceedings{rein2018exploration,
	author	= {Rein, Patrick and Hirschfeld, Robert},
	title	= {The Exploration Workspace: Interleaving the Implementation and Use of Plain Objects in Smalltalk},
	year	= {2018},
	isbn	= {9781450355131},
	publisher	= {Association for Computing Machinery},
	address	= {New York, NY, USA},
	doi	= {10.1145/3191697.3214339},
	booktitle	= {Companion Proceedings of the 2nd International Conference on the Art, Science, and Engineering of Programming},
	pages	= {113--116},
	numpages	= {4},
	keywords	= {Smalltalk, live programming, tool support, Squeak, exploratory programming},
	location	= {Nice, France},
	series	= {Programming '18}
}
@article{sandberg1988smalltalk,
	author	= {Sandberg, David W.},
	title	= {Smalltalk and Exploratory Programming},
	year	= {1988},
	issue_date	= {Oct. 1988},
	publisher	= {Association for Computing Machinery},
	address	= {New York, NY, USA},
	volume	= {23},
	number	= {10},
	issn	= {0362-1340},
	doi	= {10.1145/51607.51614},
	journal	= {SIGPLAN Not.},
	month	= {oct},
	pages	= {85--92},
	numpages	= {8}
}
@inproceedings{bockisch2015trace,
author = {Bockisch, Christoph and van 't Riet, Marnix and Yin, Haihan and Aksit, Mehmet and Lin, Ziyi and Chen, Yuting and Zhao, Jianjun},
title = {Trace-Based Debugging for Advanced-Dispatching Programming Languages},
year = {2015},
isbn = {9781450336574},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2843915.2843922},
doi = {10.1145/2843915.2843922},
abstract = {Advanced-dispatching programming languages allow to implicitly alter the behaviour of a program, depending on run-time program context. While this improves modularity, it also impedes comprehensibility. The use of advanced-dispatching programming languages can give rise to complex debugging scenarios, which cannot efficiently be resolved with traditional debugging approaches such as breakpoint-based debugging. Therefore, tool support for analysing the full history of runtime behaviour of advanced-dispatching programs is of importance for efficient debugging.In this paper, we characterise debugging scenarios for which existing work does not apply well, because they require access to the program execution history for efficient resolution. We present our design and implementation of a trace-based debugger for advanced-dispatching that supports such debugging scenarios efficiently. Our approach is the first one based on an XML-representation of the execution trace, giving rise to using very powerful standard tools such as the XQuery language for searching and navigating the trace, or scalable visualisations such as tree-maps.},
booktitle = {Proceedings of the 10th Workshop on Implementation, Compilation, Optimization of Object-Oriented Languages, Programs and Systems},
articleno = {3},
numpages = {10},
keywords = {debugging, tree-maps, XQuery, XML, advanced-dispatching, aspect-orientation, trace-based debugging, omniscient debugging},
location = {Prague, Czech Republic},
series = {ICOOOLPS '15}
}
@inproceedings{trumper2012viewfusion,
  title={ViewFusion: Correlating Structure and Activity Views for Execution Traces.},
  author={Tr{\"u}mper, Jonas and Telea, Alexandru C and D{\"o}llner, J{\"u}rgen},
  booktitle={TPCG},
  pages={45--52},
  year={2012},
  organization={Citeseer}
}
@inproceedings{chis2014moldable,
	title	= {The Moldable Debugger: A Framework for Developing Domain-specific Debuggers},
	author	= {Chi{\c{s}}, Andrei and Gîrba, Tudor and Nierstrasz, Oscar},
	editor	= {Combemale, Beno{\^i}t and Pearce, David J. and Barais, Olivier and Vinju, Jurgen J.},
	booktitle	= {Software Language Engineering},
	pages	= {102--121},
	year	= {2014},
	publisher	= {Springer International Publishing},
	isbn	= {978-3-319-11245-},
	address	= {Cham},
	doi	= {10.1007/978-3-319-11245-9_6}
}
@inproceedings{reiss2006visualizing,
author = {Reiss, Steven P.},
title = {Visualizing Program Execution Using User Abstractions},
year = {2006},
isbn = {1595934642},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1148493.1148512},
doi = {10.1145/1148493.1148512},
abstract = {A practical system that uses visualization for understanding the execution of complex programs must offer the user views of the execution that are specific to the program being understood and the particular problem at hand without significantly slowing down or perturbing the system being examined. This paper describes a visualization data model and its implementation that accomplishes this. The model starts with program events that can be instrumented efficiently and with little overhead. It uses extended finite state automata to model program behaviors in terms of events. It builds time-varying data structures based on these automata. The data structures are then made available to various visualizations through a set of mappings that let the user dynamically control the visualization. The model and its implementation have been demonstrated on a range of specific understanding problems with a variety of different visualizations.},
booktitle = {Proceedings of the 2006 ACM Symposium on Software Visualization},
pages = {125–134},
numpages = {10},
keywords = {run-time monitoring, dynamic software visualization, instrumentation},
location = {Brighton, United Kingdom},
series = {SoftVis '06}
}
@inproceedings{cheng2008xdiva,
author = {Cheng, Yung-Pin and Chen, Jih-Feng and Chiu, Ming-Chieh and Lai, Nien-Wei and Tseng, Chien-Chih},
title = {XDIVA: A Debugging Visualization System with Composable Visualization Metaphors},
year = {2008},
isbn = {9781605582207},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1449814.1449869},
doi = {10.1145/1449814.1449869},
abstract = {Despite the progress that has been made in the field of program visualization, programmers nowadays still rely on in-serting extra code (e.g., print statements) to visualize complicated program states during debugging. Only recently have tools such as DDD (Data Display Debugger) (5) begun to provide visualization of data types for programmers. Still such visualization remains limited. There are many obstacles that have impeded and continue to impede program visualization for practical use. One such major obstacle one is the wide variety of data types in a computer program. Given the variety and complexity of computations for many domains, it is unlikely that visualizations will be available a priori to cover everything that might be interesting. As an attempt to address the problem, a debugging visualization tool called xDIVA is presented. The visual effects of xDIVA use 3-D shapes, colors, and animations from a 3-D rendering engine. xDIVA conducts a novel and meticulous object-oriented design so that visualization metaphors are interactive, composable, and decoupled from data, i.e. a complicated visualization metaphor can be composed and assembled from basic ones, each of which is independently replaceable. The benefits of xDIVA are demonstrated by several applications.},
booktitle = {Companion to the 23rd ACM SIGPLAN Conference on Object-Oriented Programming Systems Languages and Applications},
pages = {807–810},
numpages = {4},
keywords = {program visualization, debugging visualization, composable visualization metaphors},
location = {Nashville, TN, USA},
series = {OOPSLA Companion '08}
}
@INPROCEEDINGS{seifert2022dbux,
  author={Seifert, Dominik and Wan, Michael and Hsu, Jane and Yeh, Benson},
  booktitle={2022 Working Conference on Software Visualization (VISSOFT)},
  title={Dbux-PDG: An Interactive Program Dependency Graph for Data Structures and Algorithms},
  year={2022},
  volume={},
  number={},
  pages={141-151},
  doi={10.1109/VISSOFT55257.2022.00022}}

@inproceedings{schulz2016visually,
  title={Visually exploring object mutation},
  author={Schulz, Rodrigo and Beck, Fabian and Felipez, Jhonny Wilder Cerezo and Bergel, Alexandre},
  booktitle={2016 IEEE Working Conference on Software Visualization (VISSOFT)},
  pages={21--25},
  year={2016},
  organization={IEEE}
}
@inproceedings{greevy2006visualizing,
  title={Visualizing live software systems in 3D},
  author={Greevy, Orla and Lanza, Michele and Wysseier, Christoph},
  booktitle={Proceedings of the 2006 ACM symposium on Software visualization},
  pages={47--56},
  year={2006}
}
@INPROCEEDINGS{fittkau2013live,
  author={Fittkau, Florian and Waller, Jan and Wulf, Christian and Hasselbring, Wilhelm},
  booktitle={2013 First IEEE Working Conference on Software Visualization (VISSOFT)},
  title={Live trace visualization for comprehending large software landscapes: The ExplorViz approach},
  year={2013},
  volume={},
  number={},
  pages={1-4},
  doi={10.1109/VISSOFT.2013.6650536}}
@inproceedings{devkota2022domain,
  title={Domain-Centered Support for Layout, Tasks, and Specification for Control Flow Graph Visualization},
  author={Devkota, Sabin and LeGendre, Matthew P and Kunen, Adam and Aschwanden, Pascal and Isaacs, Katherine E},
  booktitle={2022 Working Conference on Software Visualization (VISSOFT)},
  pages={40--50},
  year={2022},
  organization={IEEE}
}
@article{limberger2023visual,
  title={Visual variables and configuration of software maps},
  author={Limberger, Daniel and Scheibel, Willy and D{\"o}llner, J{\"u}rgen and Trapp, Matthias},
  journal={Journal of Visualization},
  volume={26},
  number={1},
  pages={249--274},
  year={2023},
  publisher={Springer}
}
@INPROCEEDINGS{ardigo2021visualizing,
  author={Ardigò, Susanna and Nagy, Csaba and Minelli, Roberto and Lanza, Michele},
  booktitle={2021 Working Conference on Software Visualization (VISSOFT)},
  title={Visualizing Data in Software Cities},
  year={2021},
  volume={},
  number={},
  pages={145-149},
  doi={10.1109/VISSOFT52517.2021.00028}}
@inproceedings{atzberger2023visualization,
  title={Visualization of Source Code Similarity Using 2.5 D Semantic Software Maps},
  author={Atzberger, Daniel and Cech, Tim and Scheibel, Willy and Limberger, Daniel and D{\"o}llner, J{\"u}rgen},
  booktitle={Computer Vision, Imaging and Computer Graphics Theory and Applications: 16th International Joint Conference, VISIGRAPP 2021, Virtual Event, February 8--10, 2021, Revised Selected Papers},
  pages={162--182},
  year={2023},
  organization={Springer}
}
@inproceedings{atzberger2022visualization,
  title={Visualization of Knowledge Distribution across Development Teams using 2.5 D Semantic Software Maps.},
  author={Atzberger, Daniel and Cech, Tim and Jobst, Adrian and Scheibel, Willy and Limberger, Daniel and Trapp, Matthias and D{\"o}llner, J{\"u}rgen},
  booktitle={VISIGRAPP (3: IVAPP)},
  pages={210--217},
  year={2022}
}
@inproceedings{hoff2022utilizing,
  title={Utilizing Software Architecture Recovery to Explore Large-Scale Software Systems in Virtual Reality},
  author={Hoff, Adrian and Gerling, Lea and Seidl, Christoph},
  booktitle={2022 Working Conference on Software Visualization (VISSOFT)},
  pages={119--130},
  year={2022},
  organization={IEEE}
}
@inproceedings{mortara2021visualization,
  title={Visualization of Object-Oriented Variability Implementations as Cities},
  author={Mortara, Johann and Collet, Philippe and Dery-Pinna, Anne-Marie},
  booktitle={2021 Working Conference on Software Visualization (VISSOFT)},
  pages={76--87},
  year={2021},
  organization={IEEE}
}
@inproceedings {borgo2015natural,
booktitle = {Computer Graphics and Visual Computing (CGVC)},
editor = {Rita Borgo and Cagatay Turkay},
title = {{Natural Phenomena as Metaphors for Visualization of Trend Data in Interactive Software Maps}},
author = {Würfel, Hannes and Trapp, Matthias and Limberger, Daniel and Döllner, Jürgen},
year = {2015},
publisher = {The Eurographics Association},
ISBN = {978-3-905674-94-1},
DOI = {10.2312/cgvc.20151246}
}
@inproceedings{balzer2005voronoi,
author = {Balzer, Michael and Deussen, Oliver and Lewerentz, Claus},
title = {Voronoi Treemaps for the Visualization of Software Metrics},
year = {2005},
isbn = {1595930736},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1056018.1056041},
doi = {10.1145/1056018.1056041},
abstract = {In this paper we present a hierarchy-based visualization approach for software metrics using Treemaps. Contrary to existing rectangle-based Treemap layout algorithms, we introduce layouts based on arbitrary polygons that are advantageous with respect to the aspect ratio between width and height of the objects and the identification of boundaries between and within the hierarchy levels in the Treemap. The layouts are computed by the iterative relaxation of Voronoi tessellations. Additionally, we describe techniques that allow the user to investigate software metric data of complex systems by utilizing transparencies in combination with interactive zooming.},
booktitle = {Proceedings of the 2005 ACM Symposium on Software Visualization},
pages = {165–172},
numpages = {8},
keywords = {software metrics, treemaps, voronoi diagrams},
location = {St. Louis, Missouri},
series = {SoftVis '05}
}
@article{dashuber2022trace,
title = {Trace visualization within the Software City metaphor: Controlled experiments on program comprehension},
journal = {Information and Software Technology},
volume = {150},
pages = {106989},
year = {2022},
issn = {0950-5849},
doi = {https://doi.org/10.1016/j.infsof.2022.106989},
url = {https://www.sciencedirect.com/science/article/pii/S0950584922001227},
author = {Veronika Dashuber and Michael Philippsen},
keywords = {Trace visualization, Software city, Program comprehension, Aggregation, Heatmap, Root cause analysis},
abstract = {Context:
Especially with the rise of microservice architectures, software is hard to understand when just the static dependencies are known. The actual call paths and the dynamic behavior of the application are hidden behind network communication. To comprehend what is going on in the software the vast amount of runtime data (traces) needs to be reduced and visualized.
Objective:
This work explores more effective visualizations to support program comprehension based on runtime data. The pure DynaCity visualization supports understanding normal behavior, while DynaCity rc supports the comprehension of faulty behavior.
Method:
DynaCity uses the city metaphor for visualization. Its novel trace visualization displays dynamic dependencies as arcs atop the city. To reduce the number of traces, DynaCity aggregates all requests between the same two components into one arc whose brightness reflects both the number and the total duration of the requests. DynaCity also encodes dynamic trace data in a heatmap that it uses to light up the building: the brighter a building is, the more active it is, i.e., the more and the longer the requests are that it receives and/or spawns. An additional color scheme reflects any error/status codes among the aggregated traces. In a controlled experiment, we compare our approach with a traditional trace visualization built into the same Software City but showing all dependencies (without aggregation) as individual arcs and also disabling the heatmap. We also report on a second study that evaluates if an error-based coloring of only the arcs is sufficient or if the buildings should also be colored. We call this extension DynaCity rc as it is meant to support root cause analyses. The source code and the raw data of the quantitative evaluations are available from https://github.com/qaware/dynacity.
Results:
We show quantitatively that a group of professional software developers who participated in a controlled experiment solve typical software comprehension tasks more correctly (11.7%) and also saved 5.83% of the total allotted time with the help of DynaCity and that they prefer it over the more traditional dynamic trace visualization. The color scheme based on HTTP error codes in DynaCity rc supports developers when performing root cause analyses, as the median of them stated that the visualization helped them much in solving the tasks. The evaluation also shows that subjects using DynaCity rc with colored arcs and buildings find the responsible component 26.2% and the underlying root cause 33.3% more correctly than the group with just colored arcs. They also ranked it 40% more helpful to color both.
Conclusion:
The DynaCity visualization helps professional software engineers to understand the dynamic behavior of a software system better and faster. The color encoding of error codes in DynaCity rc also helps them with root cause analyses.}
}
@INPROCEEDINGS{krause2021live,
  author={Krause, Alexander and Hansen, Malte and Hasselbring, Wilhelm},
  booktitle={2021 Working Conference on Software Visualization (VISSOFT)},
  title={Live Visualization of Dynamic Software Cities with Heat Map Overlays},
  year={2021},
  volume={},
  number={},
  pages={125-129},
  doi={10.1109/VISSOFT52517.2021.00024}}

@inproceedings{ciolkowski2017visualization,
  title={3-D visualization of dynamic runtime structures},
  author={Ciolkowski, Marcus and Faber, Simon and von Mammen, Sebastian},
  booktitle={Proceedings of the 27th International Workshop on Software Measurement and 12th International Conference on Software Process and Product Measurement},
  pages={189--198},
  year={2017}
}
@INPROCEEDINGS{waller2013synchrovis,
  author={Waller, Jan and Wulf, Christian and Fittkau, Florian and Döhring, Philipp and Hasselbring, Wilhelm},
  booktitle={2013 First IEEE Working Conference on Software Visualization (VISSOFT)},
  title={Synchrovis: 3D visualization of monitoring traces in the city metaphor for analyzing concurrency},
  year={2013},
  volume={},
  number={},
  pages={1-4},
  doi={10.1109/VISSOFT.2013.6650520}}
  @inproceedings{dugerdil2008execution,
  title={Execution trace visualization in a 3D space},
  author={Dugerdil, Philippe and Alam, Sazzadul},
  booktitle={Fifth International Conference on Information Technology: New Generations (itng 2008)},
  pages={38--43},
  year={2008},
  organization={IEEE}
}
@inproceedings{dugerdil2008execution,
  title={Execution trace visualization in a 3D space},
  author={Dugerdil, Philippe and Alam, Sazzadul},
  booktitle={Fifth International Conference on Information Technology: New Generations (itng 2008)},
  pages={38--43},
  year={2008},
  organization={IEEE}
}
@INPROCEEDINGS{langelier2008exploring,
  author={Langelier, Guillaume and Sahraoui, Houari and Poulin, Pierre},
  booktitle={2008 IEEE Symposium on Visual Languages and Human-Centric Computing},
  title={Exploring the evolution of software quality with animated visualization},
  year={2008},
  volume={},
  number={},
  pages={13-20},
  doi={10.1109/VLHCC.2008.4639052}}
@inproceedings{hori2019codehouse,
  title={Codehouse: Vr code visualization tool},
  author={Hori, Akihiro and Kawakami, Masumi and Ichii, Makoto},
  booktitle={2019 Working Conference on Software Visualization (VISSOFT)},
  pages={83--87},
  year={2019},
  organization={IEEE}
}
@inproceedings{weninger2020memory,
  title={Memory cities: Visualizing heap memory evolution using the software city metaphor},
  author={Weninger, Markus and Makor, Lukas and M{\"o}ssenb{\"o}ck, Hanspeter},
  booktitle={2020 Working Conference on Software Visualization (VISSOFT)},
  pages={110--121},
  year={2020},
  organization={IEEE}
}
@INPROCEEDINGS{shengdong2005elastic,
  author={Shengdong Zhao and McGuffin, M.J. and Chignell, M.H.},
  booktitle={IEEE Symposium on Information Visualization, 2005. INFOVIS 2005.},
  title={Elastic hierarchies: combining treemaps and node-link diagrams},
  year={2005},
  volume={},
  number={},
  pages={57-64},
  doi={10.1109/INFVIS.2005.1532129}}
@inproceedings{geier2022toward,
  title={Toward a VR-Native Live Programming Environment},
  author={Geier, Leonard and Tiedt, Clemens and Beckmann, Tom and Taeumel, Marcel and Hirschfeld, Robert},
  booktitle={Proceedings of the 1st ACM SIGPLAN International Workshop on Programming Abstractions and Interactive Notations, Tools, and Environments},
  pages={26--34},
  year={2022}
}
@inproceedings{merino2017cityvr,
  title={CityVR: Gameful software visualization},
  author={Merino, Leonel and Ghafari, Mohammad and Anslow, Craig and Nierstrasz, Oscar},
  booktitle={2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  pages={633--637},
  year={2017},
  organization={IEEE}
}
@INPROCEEDINGS{khaloo2017code,
  author={Khaloo, Pooya and Maghoumi, Mehran and Taranta, Eugene and Bettner, David and Laviola, Joseph},
  booktitle={2017 IEEE Working Conference on Software Visualization (VISSOFT)},
  title={Code Park: A New 3D Code Visualization Tool},
  year={2017},
  volume={},
  number={},
  pages={43-53},
  doi={10.1109/VISSOFT.2017.10}}
@article{cornelissen2008execution,
	title={Execution trace analysis through massive sequence and circular bundle views},
  author={Cornelissen, Bas and Zaidman, Andy and Holten, Danny and Moonen, Leon and Van Deursen, Arie and Van Wijk, Jarke J},
  journal={Journal of Systems and Software},
  volume={81},
  number={12},
  pages={2252--2268},
  year={2008},
  publisher={Elsevier}
}
@ARTICLE{teyseyre2009overview,
  author={Teyseyre, Alfredo R. and Campo, Marcelo R.},
  journal={IEEE Transactions on Visualization and Computer Graphics},
  title={An Overview of 3D Software Visualization},
  year={2009},
  volume={15},
  number={1},
  pages={87-105},
  doi={10.1109/TVCG.2008.86}}
@article{walker1998visualizing,
  title={Visualizing dynamic software system information through high-level models},
  author={Walker, Robert J and Murphy, Gail C and Freeman-Benson, Bjorn and Wright, Darin and Swanson, Darin and Isaak, Jeremy},
  journal={ACM SIGPLAN Notices},
  volume={33},
  number={10},
  pages={271--283},
  year={1998},
  publisher={ACM New York, NY, USA}
}
